<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BQlr8/8BlBeVUnwpjp8AAAAASUVORK5CYII=
</value>
  </data>
</root>